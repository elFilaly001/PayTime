name: paytime

services:
  web:
    container_name: paytime-front
    image: ${DOCKERHUB_USERNAME}/paytime:frontend
    build:
      context: ./paytime-front
      dockerfile: Dockerfile
    ports:
      - "172.27.160.1:5173:5173"
    networks:
      - frontend-network
    volumes:
      - ./paytime-front:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - VITE_API_URL=http://localhost:5173
      - VITE_STRIPE_PUBLISHABLE_KEY= ${VITE_STRIPE_PUBLISHABLE_KEY}
      - VITE_BACK_APP_URL=${VITE_BACK_APP_URL}
    depends_on:
      - api

  api:
    container_name: paytime-back
    image: ${DOCKERHUB_USERNAME}/paytime:backend
    build:
      context: ./paytime-back
      dockerfile: Dockerfile
    ports:
      - "172.27.160.1:3000:3000"
    environment:
      - MONGO_URI=${MONGO_URI}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_SECURE=${SMTP_SECURE}
      - MAIL_FROM_NAME=${MAIL_FROM_NAME}
      - MAIL_FROM_ADDRESS=${MAIL_FROM_ADDRESS}
      - APP_URL=${APP_URL}
      - JWT_REFRESH_TIME=${JWT_REFRESH_TIME}
      - JWT_ACCESS_TIME=${JWT_ACCESS_TIME}
      - JWT_RESET_PASSWORD_TIME=${JWT_RESET_PASSWORD_TIME}
      - JWT_EMAIL_VERIFICATION_TIME=${JWT_EMAIL_VERIFICATION_TIME}
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      
    volumes:
      - ./paytime-back:/app:delegated
      - /app/node_modules
    networks:
      - backend-network
      - frontend-network
    depends_on:
      - redis

  redis:
    container_name: paytime-redis
    image: redis:latest
    ports:
      - "172.27.160.1:6379:6379" 
    networks:
      - backend-network
    command: redis-server --save 60 1 --loglevel warning
    volumes:
      - redis_data:/data

networks:
  frontend-network:
    name: frontend-network
    driver: bridge
  backend-network:
    name: backend-network
    driver: bridge

volumes:
  redis_data:

# Add this test job to your workflow.yaml
jobs:
  test-secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Check if secrets exist
        run: |
          if [ -n "${{ secrets.DOCKERHUB_USERNAME }}" ]; then
            echo "DOCKERHUB_USERNAME is set"
          else
            echo "DOCKERHUB_USERNAME is not set"
            exit 1
          fi
          if [ -n "${{ secrets.DOCKERHUB_TOKEN }}" ]; then
            echo "DOCKERHUB_TOKEN is set"
          else
            echo "DOCKERHUB_TOKEN is not set"
            exit 1
          fi
